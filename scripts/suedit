#!/usr/bin/perl -w 
# 
# Copyright (c) 2011, Emiel Kollof <coolvibe@hackerheaven.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# Secure wrapper for an editor that uses $EDITOR and tries to wrap it
# using our library wrapper. If the library wrapper isn't available, it
# will try to drop privs.
#
# LD_PRELOAD is used. This might not work on platforms like AIX, but seems
# to work fine on Solaris, FreeBSD and Linux.
#
# If you intend to run this on AIX, change LD_PRELOAD to LDR_PRELOAD.

use strict;
use POSIX;
use Cwd 'abs_path';
use File::Temp 'mkstemp';
use File::Copy;
use File::Compare;
use File::stat;
use Data::Dumper;

my $debug = 0;
my $verbose = 0;
my $usewrapper = 0;
my $wrapper;
my $dropcreds = 0;
my $tmpdir = "/tmp";
my $origfile;
my $workfile;
my $workfh;
my $createnew = 0;
my $editor = "vim";

# Functions

sub tempfile() {
	my ($fh, $filename) = mkstemp("/tmp/visudo.XXXXXX");
	return ($fh, $filename);
}

sub edit {
	my ($destination) = @_;
	my $addargs = "";
	my $newfile = 0;
	my $stat;
	my $uid;
	my $gid;

	# get owner/group/mode for the file, so we can restore that when
	# we are done.
	if (! -e $destination) {
		$newfile = 1;
	} else {
		$stat = stat($destination);	
	}

	# alternative method which drops elevated privs
	if ($dropcreds) {
		$uid = $ENV{"SUDO_UID"};
		$gid = $ENV{"SUDO_GID"}; 
	}

	my ($workfh, $tmp) = tempfile();
	!$verbose || print "Using $tmp.\n";
	chown($uid, $gid, $tmp) if $dropcreds;

	# editor selection
	if (getenv("EDITOR")) {
		$editor = getenv("EDITOR");
	}


	
	if ($editor eq "vi" || $editor eq "vim") {
		!$verbose || print "Found a vi-like editor.\n";
		$addargs = "-n"
	}

	my $pid = fork();
	if (!$pid) { # child

		if ($dropcreds) {
			$< = $> = $uid;
			$( = $) = $gid;
		}


		if ($usewrapper) {
			# Spam environment with some stuff if wrapper is enabled
			$ENV{"LD_PRELOAD"}  = $wrapper;
			$ENV{"SUDO_ALLOWED"} = $tmp;
		}

		# Some editors need a termcap. Make sure it can read it.
		if ($usewrapper) {
			# check $TERM
			my $term = $ENV{"TERM"};
			if (!$term) {
				$term = "vt100";
			}
			my $termpath = "/usr/share/terminfo/" . substr($term, 0, 1) . "/" . $term;
			!$verbose || print "Adding $termpath\n";
			$ENV{SUDO_ALLOWED} .= ":$termpath";
		}

		if (!$newfile) {
			!$verbose || print "$destination -> $tmp\n";
			copy($destination, $tmp) || die "Copy failed. Aborting. $!";
		}
		chown($uid, $gid, $tmp) if $dropcreds; 

		if (!$addargs) {
			exec($editor, $tmp);		
		} else {
			exec($editor, $addargs, $tmp);
		}		
	} else { # parent
		waitpid($pid, 0);
	}
	undef($ENV{"LD_PRELOAD"});
	undef($ENV{"SUDO_ALLOWED"});

	!$verbose || print "Check if file has changed...\n";
	if (compare($tmp, $destination) == 0) {
		!$verbose || print "Nothing changed. Exiting.\n";
		exit;
	}
	!$verbose || print "Moving file to $destination\n";	
	move($tmp, $destination) || die ("Can't move file. Edited file is in $tmp. Error: $!");
	if (!$newfile) {
		chown($stat->uid, $stat->gid, $destination);
		chmod($stat->mode, $destination);
	} else {
		chown(0, 0, $destination);
		chmod(0644, $destination);
	}
	
}


# MAIN

$ENV{"PATH"} = "/bin:/usr/bin:/usr/local/bin";

# Are there any parameters? TODO: use getopt
if ($#ARGV == -1) {
	print "Need file to edit!\n";
	exit;
}

if ($debug) {
	$ENV{"SUDO_DEBUG"} = "True";
}

# Look for wrapper.so first.
if ( -e "../libwrapper/wrapper.so") {
	$wrapper = abs_path("../libwrapper/wrapper.so");
	$usewrapper = 1;
} elsif( -e "/opt/sudowrappers/libwrapper/wrapper.so") {
	$wrapper = "/opt/sudowrappers/libwrapper/wrapper.so";
	$usewrapper = 1;
} else {
	$dropcreds = 1;
}

edit($ARGV[0]);




